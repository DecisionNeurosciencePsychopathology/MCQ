startup<-function(mode="boxsync",boxdir="C:/Users/buerkem/Box/skinner/data",load=F,protocol.s="bsocial", loadbsrc=T) {
  require("devtools")
  devtools::install_github("DecisionNeurosciencePsychopathology/redcap_in_r",force = F)
  library(bsrc)
  input.uri<<-'https://www.ctsiredcap.pitt.edu/redcap/api/'
  #mood<-boxdir
  ema.data.rdpath<-file.path(boxdir,"EMA Data","emadata.all.rdata")
  ema.graph.path<<-file.path(boxdir,"EMA Data","Plots")
  rdpaths<<-list(ema=file.path(boxdir,"EMA Data","emadata.all.rdata"),
                 bsocial=file.path(boxdir,"RedCap Data","BSocial","Redcap.bsocial.rdata"),
                 ksocial=file.path(boxdir,"RedCap Data","KSocial","Redcap.ksocial.rdata"),
                 scandb=file.path(boxdir,"RedCap Data","ScanDatabase","Redcap.scandb.rdata"),
                 masterdemo=file.path(boxdir,"RedCap Data","MasterDemo","Redcap.masterdemo.rdata"),
                 protect=file.path(boxdir,"RedCap Data","Protect","Redcap.protect.rdata"))
  ptc<-list(
    bsocial=list(name="bsocial",redcap_uri=input.uri,
                 token='F4D36C656D822DF09832B5A4A8F323E6',
                 rdpath=rdpaths$bsocial,
                 regiformname="record_registration"),
    ksocial=list(name="ksocial",
                 redcap_uri=input.uri,
                 token='D542DAFD381E12682A7CFBB11286AC9B',
                 rdpath=rdpaths$ksocial),
    scandb=list(name="scandb",
                redcap_uri=input.uri,
                token='0386803904E8E249F8D9500859528327',
                rdpath=rdpaths$scandb),
    masterdemo=list(name="masterdemo",
                    redcap_uri=input.uri,
                    token='621C0629D621EE187EF89D6E1041D85D',
                    rdpath=rdpaths$masterdemo,
                    forcenewsubinsync=TRUE,
                    regiformname="record_registration"),
    protect=list(name="protect",
                 redcap_uri=input.uri,
                 token='FAE6A9EDB55B3DFC6DC117B888601674',
                 rdpath=rdpaths$protect,
                 forcenewsubinsync=TRUE,
                 regiformname="record_registration")
  )
  message("Loading switcher profile...")
  ptcs<<-lapply(ptc,function(x) {do.call(bsrc.switcher,x)})
  protocol.cur<<-do.call(bsrc.switcher,ptc[[protocol.s]])
  message("DONE")
}

